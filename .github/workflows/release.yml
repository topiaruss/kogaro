name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME: topiaruss/kogaro

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release-helm-chart:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.13.1'

    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Update chart version and values
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        echo "Updating Chart.yaml with version: $VERSION"
        sed -i "s/version: .*/version: $VERSION/" charts/kogaro/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: \"$VERSION\"/" charts/kogaro/Chart.yaml
        
        echo "Updating values.yaml with image tag: $VERSION"
        sed -i "s/tag: .*/tag: \"$VERSION\"/" charts/kogaro/values.yaml
        
        # Show the changes
        echo "=== Chart.yaml ==="
        grep -E "(version|appVersion):" charts/kogaro/Chart.yaml
        echo "=== values.yaml tag ==="
        grep "tag:" charts/kogaro/values.yaml

    - name: Package and release chart
      uses: helm/chart-releaser-action@v1.6.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        CR_RELEASE_NAME_TEMPLATE: "helm-chart-{{ .Version }}"
      with:
        charts_dir: charts
        config: .github/cr.yaml
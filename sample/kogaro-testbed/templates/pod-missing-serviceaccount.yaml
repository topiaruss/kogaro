# Create a ServiceAccount that we'll reference and then delete to test dangling reference detection
apiVersion: v1
kind: ServiceAccount
metadata:
  name: missing-sa
  namespace: {{ .Values.namespace | default "kogaro-testbed" }}
  labels:
    {{- include "kogaro-testbed.labels" . | nindent 4 }}
    test-purpose: "temporary-sa-for-dangling-reference-test"
  annotations:
    test-description: "Temporary ServiceAccount created for dangling reference testing"
---
# Enhanced ServiceAccount validation test case
# Tests validateServiceAccountExists function
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "kogaro-testbed.fullname" . }}-missing-serviceaccount
  labels:
    {{- include "kogaro-testbed.labels" . | nindent 4 }}
    test-case: "missing-serviceaccount"
    test-category: "reference-validation"
  annotations:
    kogaro-test-case: "Pod with ServiceAccount reference to non-existent ServiceAccount"
    kogaro-expected-error: "ServiceAccount 'missing-sa' does not exist"
    test-description: "Tests validateServiceAccountExists function - should trigger dangling_service_account error"
spec:
  serviceAccountName: missing-sa  # This ServiceAccount doesn't exist - should trigger validation error
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
  containers:
  - name: test-container
    image: busybox:1.35
    securityContext:
      runAsUser: 1000
      runAsGroup: 3000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "256Mi"
    command: ['sleep', '3600']
  restartPolicy: Never
---
# Test case for default ServiceAccount validation (tests SharedConfig.DefaultServiceAccountName)
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "kogaro-testbed.fullname" . }}-default-serviceaccount-test
  labels:
    {{- include "kogaro-testbed.labels" . | nindent 4 }}
    test-case: "default-serviceaccount-test"
    test-category: "shared-config"
  annotations:
    test-description: "Tests default ServiceAccount handling from SharedConfig"
spec:
  # No serviceAccountName specified - should default to SharedConfig.DefaultServiceAccountName ("default")
  # This tests the SharedConfig default behavior in ReferenceValidator
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
  containers:
  - name: default-sa-container
    image: busybox:1.35
    securityContext:
      runAsUser: 1000
      runAsGroup: 3000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "256Mi"
    command: ['sleep', '3600']
  restartPolicy: Never
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kogaro.fullname" . }}
  labels:
    {{- include "kogaro.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kogaro.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kogaro.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kogaro.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --metrics-bind-address=0.0.0.0:{{ .Values.service.metricsPort }}
            - --health-probe-bind-address=0.0.0.0:{{ .Values.service.healthPort }}
            - --scan-interval={{ .Values.validation.scanInterval }}
            - --enable-ingress-validation={{ .Values.validation.enableIngressValidation }}
            - --enable-configmap-validation={{ .Values.validation.enableConfigMapValidation }}
            - --enable-secret-validation={{ .Values.validation.enableSecretValidation }}
            - --enable-pvc-validation={{ .Values.validation.enablePVCValidation }}
            - --enable-serviceaccount-validation={{ .Values.validation.enableServiceAccountValidation }}
            - --enable-resource-limits-validation={{ .Values.validation.enableResourceLimitsValidation }}
            - --enable-missing-requests-validation={{ .Values.validation.enableMissingRequestsValidation }}
            - --enable-missing-limits-validation={{ .Values.validation.enableMissingLimitsValidation }}
            - --enable-qos-validation={{ .Values.validation.enableQoSValidation }}
            {{- if .Values.validation.minCPURequest }}
            - --min-cpu-request={{ .Values.validation.minCPURequest }}
            {{- end }}
            {{- if .Values.validation.minMemoryRequest }}
            - --min-memory-request={{ .Values.validation.minMemoryRequest }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.service.healthPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}